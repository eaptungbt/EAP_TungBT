//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeClientWeb.EmployeeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeWebserviceREST")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string empIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string empFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string empLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int empAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string empAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string empID {
            get {
                return this.empIDField;
            }
            set {
                if ((object.ReferenceEquals(this.empIDField, value) != true)) {
                    this.empIDField = value;
                    this.RaisePropertyChanged("empID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string empFirstName {
            get {
                return this.empFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.empFirstNameField, value) != true)) {
                    this.empFirstNameField = value;
                    this.RaisePropertyChanged("empFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string empLastName {
            get {
                return this.empLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.empLastNameField, value) != true)) {
                    this.empLastNameField = value;
                    this.RaisePropertyChanged("empLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int empAge {
            get {
                return this.empAgeField;
            }
            set {
                if ((this.empAgeField.Equals(value) != true)) {
                    this.empAgeField = value;
                    this.RaisePropertyChanged("empAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string empAddress {
            get {
                return this.empAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.empAddressField, value) != true)) {
                    this.empAddressField = value;
                    this.RaisePropertyChanged("empAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeService.IEmployeeNew")]
    public interface IEmployeeNew {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/GetProductList", ReplyAction="http://tempuri.org/IEmployeeNew/GetProductListResponse")]
        EmployeeClientWeb.EmployeeService.Employee[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/GetProductList", ReplyAction="http://tempuri.org/IEmployeeNew/GetProductListResponse")]
        System.Threading.Tasks.Task<EmployeeClientWeb.EmployeeService.Employee[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/AddEmployeeResponse")]
        bool AddEmployee(EmployeeClientWeb.EmployeeService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/AddEmployeeResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeClientWeb.EmployeeService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/UpdateEmployeeResponse")]
        bool UpdateEmployee(EmployeeClientWeb.EmployeeService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeClientWeb.EmployeeService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/DeleteEmployeeResponse")]
        bool DeleteEmployee(string idE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(string idE);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeNewChannel : EmployeeClientWeb.EmployeeService.IEmployeeNew, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeNewClient : System.ServiceModel.ClientBase<EmployeeClientWeb.EmployeeService.IEmployeeNew>, EmployeeClientWeb.EmployeeService.IEmployeeNew {
        
        public EmployeeNewClient() {
        }
        
        public EmployeeNewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeNewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeNewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeNewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeClientWeb.EmployeeService.Employee[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<EmployeeClientWeb.EmployeeService.Employee[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public bool AddEmployee(EmployeeClientWeb.EmployeeService.Employee emp) {
            return base.Channel.AddEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeClientWeb.EmployeeService.Employee emp) {
            return base.Channel.AddEmployeeAsync(emp);
        }
        
        public bool UpdateEmployee(EmployeeClientWeb.EmployeeService.Employee emp) {
            return base.Channel.UpdateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeClientWeb.EmployeeService.Employee emp) {
            return base.Channel.UpdateEmployeeAsync(emp);
        }
        
        public bool DeleteEmployee(string idE) {
            return base.Channel.DeleteEmployee(idE);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(string idE) {
            return base.Channel.DeleteEmployeeAsync(idE);
        }
    }
}
