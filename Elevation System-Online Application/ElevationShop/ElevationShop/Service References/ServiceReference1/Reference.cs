//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElevationShop.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.Order[] OrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailCustomer {
            get {
                return this.emailCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.emailCustomerField, value) != true)) {
                    this.emailCustomerField = value;
                    this.RaisePropertyChanged("emailCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameCustomer {
            get {
                return this.nameCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.nameCustomerField, value) != true)) {
                    this.nameCustomerField = value;
                    this.RaisePropertyChanged("nameCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passwordCustomer {
            get {
                return this.passwordCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordCustomerField, value) != true)) {
                    this.passwordCustomerField = value;
                    this.RaisePropertyChanged("passwordCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string addressCustomer {
            get {
                return this.addressCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.addressCustomerField, value) != true)) {
                    this.addressCustomerField = value;
                    this.RaisePropertyChanged("addressCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ElevationShop.ServiceReference1.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idOderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.Maintenance[] MaintenancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.OrderDetail[] OrderDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idOder {
            get {
                return this.idOderField;
            }
            set {
                if ((object.ReferenceEquals(this.idOderField, value) != true)) {
                    this.idOderField = value;
                    this.RaisePropertyChanged("idOder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string emailCustomer {
            get {
                return this.emailCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.emailCustomerField, value) != true)) {
                    this.emailCustomerField = value;
                    this.RaisePropertyChanged("emailCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string emailEmployee {
            get {
                return this.emailEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.emailEmployeeField, value) != true)) {
                    this.emailEmployeeField = value;
                    this.RaisePropertyChanged("emailEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<System.DateTime> time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ElevationShop.ServiceReference1.Maintenance[] Maintenances {
            get {
                return this.MaintenancesField;
            }
            set {
                if ((object.ReferenceEquals(this.MaintenancesField, value) != true)) {
                    this.MaintenancesField = value;
                    this.RaisePropertyChanged("Maintenances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public ElevationShop.ServiceReference1.OrderDetail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Maintenance", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Maintenance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idMtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idOderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string problemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> statusMaintenaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idMt {
            get {
                return this.idMtField;
            }
            set {
                if ((this.idMtField.Equals(value) != true)) {
                    this.idMtField = value;
                    this.RaisePropertyChanged("idMt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idOder {
            get {
                return this.idOderField;
            }
            set {
                if ((object.ReferenceEquals(this.idOderField, value) != true)) {
                    this.idOderField = value;
                    this.RaisePropertyChanged("idOder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string problem {
            get {
                return this.problemField;
            }
            set {
                if ((object.ReferenceEquals(this.problemField, value) != true)) {
                    this.problemField = value;
                    this.RaisePropertyChanged("problem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> statusMaintenace {
            get {
                return this.statusMaintenaceField;
            }
            set {
                if ((this.statusMaintenaceField.Equals(value) != true)) {
                    this.statusMaintenaceField = value;
                    this.RaisePropertyChanged("statusMaintenace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idOderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> qtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idOD {
            get {
                return this.idODField;
            }
            set {
                if ((this.idODField.Equals(value) != true)) {
                    this.idODField = value;
                    this.RaisePropertyChanged("idOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idOder {
            get {
                return this.idOderField;
            }
            set {
                if ((object.ReferenceEquals(this.idOderField, value) != true)) {
                    this.idOderField = value;
                    this.RaisePropertyChanged("idOder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string idElevator {
            get {
                return this.idElevatorField;
            }
            set {
                if ((object.ReferenceEquals(this.idElevatorField, value) != true)) {
                    this.idElevatorField = value;
                    this.RaisePropertyChanged("idElevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> qty {
            get {
                return this.qtyField;
            }
            set {
                if ((this.qtyField.Equals(value) != true)) {
                    this.qtyField = value;
                    this.RaisePropertyChanged("qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<decimal> price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressEmpoyeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.Order[] OrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailEmployee {
            get {
                return this.emailEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.emailEmployeeField, value) != true)) {
                    this.emailEmployeeField = value;
                    this.RaisePropertyChanged("emailEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nameEmployee {
            get {
                return this.nameEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.nameEmployeeField, value) != true)) {
                    this.nameEmployeeField = value;
                    this.RaisePropertyChanged("nameEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passwordEmployee {
            get {
                return this.passwordEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordEmployeeField, value) != true)) {
                    this.passwordEmployeeField = value;
                    this.RaisePropertyChanged("passwordEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string addressEmpoyee {
            get {
                return this.addressEmpoyeeField;
            }
            set {
                if ((object.ReferenceEquals(this.addressEmpoyeeField, value) != true)) {
                    this.addressEmpoyeeField = value;
                    this.RaisePropertyChanged("addressEmpoyee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ElevationShop.ServiceReference1.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Elevator", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Elevator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string systemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string functionElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string designField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.Feedback[] FeedbacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElevationShop.ServiceReference1.OrderDetail[] OrderDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idElevator {
            get {
                return this.idElevatorField;
            }
            set {
                if ((object.ReferenceEquals(this.idElevatorField, value) != true)) {
                    this.idElevatorField = value;
                    this.RaisePropertyChanged("idElevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string systemType {
            get {
                return this.systemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.systemTypeField, value) != true)) {
                    this.systemTypeField = value;
                    this.RaisePropertyChanged("systemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string functionElevator {
            get {
                return this.functionElevatorField;
            }
            set {
                if ((object.ReferenceEquals(this.functionElevatorField, value) != true)) {
                    this.functionElevatorField = value;
                    this.RaisePropertyChanged("functionElevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<decimal> cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string descriptionElevator {
            get {
                return this.descriptionElevatorField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionElevatorField, value) != true)) {
                    this.descriptionElevatorField = value;
                    this.RaisePropertyChanged("descriptionElevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string design {
            get {
                return this.designField;
            }
            set {
                if ((object.ReferenceEquals(this.designField, value) != true)) {
                    this.designField = value;
                    this.RaisePropertyChanged("design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public ElevationShop.ServiceReference1.Feedback[] Feedbacks {
            get {
                return this.FeedbacksField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbacksField, value) != true)) {
                    this.FeedbacksField = value;
                    this.RaisePropertyChanged("Feedbacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public ElevationShop.ServiceReference1.OrderDetail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/ElevationService")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idFbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idElevatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SatisfyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string problemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string improvementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> statusFeedbackField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idFb {
            get {
                return this.idFbField;
            }
            set {
                if ((this.idFbField.Equals(value) != true)) {
                    this.idFbField = value;
                    this.RaisePropertyChanged("idFb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string idElevator {
            get {
                return this.idElevatorField;
            }
            set {
                if ((object.ReferenceEquals(this.idElevatorField, value) != true)) {
                    this.idElevatorField = value;
                    this.RaisePropertyChanged("idElevator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Satisfy {
            get {
                return this.SatisfyField;
            }
            set {
                if ((object.ReferenceEquals(this.SatisfyField, value) != true)) {
                    this.SatisfyField = value;
                    this.RaisePropertyChanged("Satisfy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string problem {
            get {
                return this.problemField;
            }
            set {
                if ((object.ReferenceEquals(this.problemField, value) != true)) {
                    this.problemField = value;
                    this.RaisePropertyChanged("problem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string improvement {
            get {
                return this.improvementField;
            }
            set {
                if ((object.ReferenceEquals(this.improvementField, value) != true)) {
                    this.improvementField = value;
                    this.RaisePropertyChanged("improvement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> statusFeedback {
            get {
                return this.statusFeedbackField;
            }
            set {
                if ((this.statusFeedbackField.Equals(value) != true)) {
                    this.statusFeedbackField = value;
                    this.RaisePropertyChanged("statusFeedback");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IElevatorService")]
    public interface IElevatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/loginCustomer", ReplyAction="http://tempuri.org/IElevatorService/loginCustomerResponse")]
        ElevationShop.ServiceReference1.Customer loginCustomer(ElevationShop.ServiceReference1.Customer cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/loginCustomer", ReplyAction="http://tempuri.org/IElevatorService/loginCustomerResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Customer> loginCustomerAsync(ElevationShop.ServiceReference1.Customer cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/createCustomer", ReplyAction="http://tempuri.org/IElevatorService/createCustomerResponse")]
        bool createCustomer(ElevationShop.ServiceReference1.Customer cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/createCustomer", ReplyAction="http://tempuri.org/IElevatorService/createCustomerResponse")]
        System.Threading.Tasks.Task<bool> createCustomerAsync(ElevationShop.ServiceReference1.Customer cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getAllCustomerID", ReplyAction="http://tempuri.org/IElevatorService/getAllCustomerIDResponse")]
        string[] getAllCustomerID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getAllCustomerID", ReplyAction="http://tempuri.org/IElevatorService/getAllCustomerIDResponse")]
        System.Threading.Tasks.Task<string[]> getAllCustomerIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/loginEmployee", ReplyAction="http://tempuri.org/IElevatorService/loginEmployeeResponse")]
        ElevationShop.ServiceReference1.Employee loginEmployee(ElevationShop.ServiceReference1.Employee cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/loginEmployee", ReplyAction="http://tempuri.org/IElevatorService/loginEmployeeResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Employee> loginEmployeeAsync(ElevationShop.ServiceReference1.Employee cs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProduct", ReplyAction="http://tempuri.org/IElevatorService/getProductResponse")]
        ElevationShop.ServiceReference1.Elevator[] getProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProduct", ReplyAction="http://tempuri.org/IElevatorService/getProductResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator[]> getProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProductByID", ReplyAction="http://tempuri.org/IElevatorService/getProductByIDResponse")]
        ElevationShop.ServiceReference1.Elevator getProductByID(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProductByID", ReplyAction="http://tempuri.org/IElevatorService/getProductByIDResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator> getProductByIDAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProductByDesign", ReplyAction="http://tempuri.org/IElevatorService/getProductByDesignResponse")]
        ElevationShop.ServiceReference1.Elevator[] getProductByDesign(string dedign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getProductByDesign", ReplyAction="http://tempuri.org/IElevatorService/getProductByDesignResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator[]> getProductByDesignAsync(string dedign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addProduct", ReplyAction="http://tempuri.org/IElevatorService/addProductResponse")]
        bool addProduct(ElevationShop.ServiceReference1.Elevator ele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addProduct", ReplyAction="http://tempuri.org/IElevatorService/addProductResponse")]
        System.Threading.Tasks.Task<bool> addProductAsync(ElevationShop.ServiceReference1.Elevator ele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/editProduct", ReplyAction="http://tempuri.org/IElevatorService/editProductResponse")]
        bool editProduct(ElevationShop.ServiceReference1.Elevator ele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/editProduct", ReplyAction="http://tempuri.org/IElevatorService/editProductResponse")]
        System.Threading.Tasks.Task<bool> editProductAsync(ElevationShop.ServiceReference1.Elevator ele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/deleteProduct", ReplyAction="http://tempuri.org/IElevatorService/deleteProductResponse")]
        bool deleteProduct(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/deleteProduct", ReplyAction="http://tempuri.org/IElevatorService/deleteProductResponse")]
        System.Threading.Tasks.Task<bool> deleteProductAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrder", ReplyAction="http://tempuri.org/IElevatorService/getOrderResponse")]
        ElevationShop.ServiceReference1.Order[] getOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrder", ReplyAction="http://tempuri.org/IElevatorService/getOrderResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order[]> getOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderByID", ReplyAction="http://tempuri.org/IElevatorService/getOrderByIDResponse")]
        ElevationShop.ServiceReference1.Order getOrderByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderByID", ReplyAction="http://tempuri.org/IElevatorService/getOrderByIDResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order> getOrderByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/coutNewOrder", ReplyAction="http://tempuri.org/IElevatorService/coutNewOrderResponse")]
        int coutNewOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/coutNewOrder", ReplyAction="http://tempuri.org/IElevatorService/coutNewOrderResponse")]
        System.Threading.Tasks.Task<int> coutNewOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderByEmail", ReplyAction="http://tempuri.org/IElevatorService/getOrderByEmailResponse")]
        ElevationShop.ServiceReference1.Order[] getOrderByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderByEmail", ReplyAction="http://tempuri.org/IElevatorService/getOrderByEmailResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order[]> getOrderByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addOrder", ReplyAction="http://tempuri.org/IElevatorService/addOrderResponse")]
        bool addOrder(ElevationShop.ServiceReference1.Order od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addOrder", ReplyAction="http://tempuri.org/IElevatorService/addOrderResponse")]
        System.Threading.Tasks.Task<bool> addOrderAsync(ElevationShop.ServiceReference1.Order od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addOrderDetail", ReplyAction="http://tempuri.org/IElevatorService/addOrderDetailResponse")]
        bool addOrderDetail(ElevationShop.ServiceReference1.OrderDetail odetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addOrderDetail", ReplyAction="http://tempuri.org/IElevatorService/addOrderDetailResponse")]
        System.Threading.Tasks.Task<bool> addOrderDetailAsync(ElevationShop.ServiceReference1.OrderDetail odetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderDetail", ReplyAction="http://tempuri.org/IElevatorService/getOrderDetailResponse")]
        ElevationShop.ServiceReference1.OrderDetail[] getOrderDetail(string idOD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getOrderDetail", ReplyAction="http://tempuri.org/IElevatorService/getOrderDetailResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.OrderDetail[]> getOrderDetailAsync(string idOD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/updateOrder", ReplyAction="http://tempuri.org/IElevatorService/updateOrderResponse")]
        bool updateOrder(string id, int status, string emailEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/updateOrder", ReplyAction="http://tempuri.org/IElevatorService/updateOrderResponse")]
        System.Threading.Tasks.Task<bool> updateOrderAsync(string id, int status, string emailEmployee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/countFeedback", ReplyAction="http://tempuri.org/IElevatorService/countFeedbackResponse")]
        int countFeedback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/countFeedback", ReplyAction="http://tempuri.org/IElevatorService/countFeedbackResponse")]
        System.Threading.Tasks.Task<int> countFeedbackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getFeedBack", ReplyAction="http://tempuri.org/IElevatorService/getFeedBackResponse")]
        ElevationShop.ServiceReference1.Feedback[] getFeedBack();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getFeedBack", ReplyAction="http://tempuri.org/IElevatorService/getFeedBackResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Feedback[]> getFeedBackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addFeedback", ReplyAction="http://tempuri.org/IElevatorService/addFeedbackResponse")]
        bool addFeedback(ElevationShop.ServiceReference1.Feedback f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addFeedback", ReplyAction="http://tempuri.org/IElevatorService/addFeedbackResponse")]
        System.Threading.Tasks.Task<bool> addFeedbackAsync(ElevationShop.ServiceReference1.Feedback f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/seenFeedback", ReplyAction="http://tempuri.org/IElevatorService/seenFeedbackResponse")]
        void seenFeedback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/seenFeedback", ReplyAction="http://tempuri.org/IElevatorService/seenFeedbackResponse")]
        System.Threading.Tasks.Task seenFeedbackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/countMaintenance", ReplyAction="http://tempuri.org/IElevatorService/countMaintenanceResponse")]
        int countMaintenance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/countMaintenance", ReplyAction="http://tempuri.org/IElevatorService/countMaintenanceResponse")]
        System.Threading.Tasks.Task<int> countMaintenanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/seenMaintenance", ReplyAction="http://tempuri.org/IElevatorService/seenMaintenanceResponse")]
        void seenMaintenance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/seenMaintenance", ReplyAction="http://tempuri.org/IElevatorService/seenMaintenanceResponse")]
        System.Threading.Tasks.Task seenMaintenanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getMaintenance", ReplyAction="http://tempuri.org/IElevatorService/getMaintenanceResponse")]
        ElevationShop.ServiceReference1.Maintenance[] getMaintenance();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/getMaintenance", ReplyAction="http://tempuri.org/IElevatorService/getMaintenanceResponse")]
        System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Maintenance[]> getMaintenanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addMaintenance", ReplyAction="http://tempuri.org/IElevatorService/addMaintenanceResponse")]
        bool addMaintenance(ElevationShop.ServiceReference1.Maintenance m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IElevatorService/addMaintenance", ReplyAction="http://tempuri.org/IElevatorService/addMaintenanceResponse")]
        System.Threading.Tasks.Task<bool> addMaintenanceAsync(ElevationShop.ServiceReference1.Maintenance m);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IElevatorServiceChannel : ElevationShop.ServiceReference1.IElevatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElevatorServiceClient : System.ServiceModel.ClientBase<ElevationShop.ServiceReference1.IElevatorService>, ElevationShop.ServiceReference1.IElevatorService {
        
        public ElevatorServiceClient() {
        }
        
        public ElevatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElevatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElevatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElevatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ElevationShop.ServiceReference1.Customer loginCustomer(ElevationShop.ServiceReference1.Customer cs) {
            return base.Channel.loginCustomer(cs);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Customer> loginCustomerAsync(ElevationShop.ServiceReference1.Customer cs) {
            return base.Channel.loginCustomerAsync(cs);
        }
        
        public bool createCustomer(ElevationShop.ServiceReference1.Customer cs) {
            return base.Channel.createCustomer(cs);
        }
        
        public System.Threading.Tasks.Task<bool> createCustomerAsync(ElevationShop.ServiceReference1.Customer cs) {
            return base.Channel.createCustomerAsync(cs);
        }
        
        public string[] getAllCustomerID() {
            return base.Channel.getAllCustomerID();
        }
        
        public System.Threading.Tasks.Task<string[]> getAllCustomerIDAsync() {
            return base.Channel.getAllCustomerIDAsync();
        }
        
        public ElevationShop.ServiceReference1.Employee loginEmployee(ElevationShop.ServiceReference1.Employee cs) {
            return base.Channel.loginEmployee(cs);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Employee> loginEmployeeAsync(ElevationShop.ServiceReference1.Employee cs) {
            return base.Channel.loginEmployeeAsync(cs);
        }
        
        public ElevationShop.ServiceReference1.Elevator[] getProduct() {
            return base.Channel.getProduct();
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator[]> getProductAsync() {
            return base.Channel.getProductAsync();
        }
        
        public ElevationShop.ServiceReference1.Elevator getProductByID(string ID) {
            return base.Channel.getProductByID(ID);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator> getProductByIDAsync(string ID) {
            return base.Channel.getProductByIDAsync(ID);
        }
        
        public ElevationShop.ServiceReference1.Elevator[] getProductByDesign(string dedign) {
            return base.Channel.getProductByDesign(dedign);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Elevator[]> getProductByDesignAsync(string dedign) {
            return base.Channel.getProductByDesignAsync(dedign);
        }
        
        public bool addProduct(ElevationShop.ServiceReference1.Elevator ele) {
            return base.Channel.addProduct(ele);
        }
        
        public System.Threading.Tasks.Task<bool> addProductAsync(ElevationShop.ServiceReference1.Elevator ele) {
            return base.Channel.addProductAsync(ele);
        }
        
        public bool editProduct(ElevationShop.ServiceReference1.Elevator ele) {
            return base.Channel.editProduct(ele);
        }
        
        public System.Threading.Tasks.Task<bool> editProductAsync(ElevationShop.ServiceReference1.Elevator ele) {
            return base.Channel.editProductAsync(ele);
        }
        
        public bool deleteProduct(string id) {
            return base.Channel.deleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteProductAsync(string id) {
            return base.Channel.deleteProductAsync(id);
        }
        
        public ElevationShop.ServiceReference1.Order[] getOrder() {
            return base.Channel.getOrder();
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order[]> getOrderAsync() {
            return base.Channel.getOrderAsync();
        }
        
        public ElevationShop.ServiceReference1.Order getOrderByID(string id) {
            return base.Channel.getOrderByID(id);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order> getOrderByIDAsync(string id) {
            return base.Channel.getOrderByIDAsync(id);
        }
        
        public int coutNewOrder() {
            return base.Channel.coutNewOrder();
        }
        
        public System.Threading.Tasks.Task<int> coutNewOrderAsync() {
            return base.Channel.coutNewOrderAsync();
        }
        
        public ElevationShop.ServiceReference1.Order[] getOrderByEmail(string email) {
            return base.Channel.getOrderByEmail(email);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Order[]> getOrderByEmailAsync(string email) {
            return base.Channel.getOrderByEmailAsync(email);
        }
        
        public bool addOrder(ElevationShop.ServiceReference1.Order od) {
            return base.Channel.addOrder(od);
        }
        
        public System.Threading.Tasks.Task<bool> addOrderAsync(ElevationShop.ServiceReference1.Order od) {
            return base.Channel.addOrderAsync(od);
        }
        
        public bool addOrderDetail(ElevationShop.ServiceReference1.OrderDetail odetail) {
            return base.Channel.addOrderDetail(odetail);
        }
        
        public System.Threading.Tasks.Task<bool> addOrderDetailAsync(ElevationShop.ServiceReference1.OrderDetail odetail) {
            return base.Channel.addOrderDetailAsync(odetail);
        }
        
        public ElevationShop.ServiceReference1.OrderDetail[] getOrderDetail(string idOD) {
            return base.Channel.getOrderDetail(idOD);
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.OrderDetail[]> getOrderDetailAsync(string idOD) {
            return base.Channel.getOrderDetailAsync(idOD);
        }
        
        public bool updateOrder(string id, int status, string emailEmployee) {
            return base.Channel.updateOrder(id, status, emailEmployee);
        }
        
        public System.Threading.Tasks.Task<bool> updateOrderAsync(string id, int status, string emailEmployee) {
            return base.Channel.updateOrderAsync(id, status, emailEmployee);
        }
        
        public int countFeedback() {
            return base.Channel.countFeedback();
        }
        
        public System.Threading.Tasks.Task<int> countFeedbackAsync() {
            return base.Channel.countFeedbackAsync();
        }
        
        public ElevationShop.ServiceReference1.Feedback[] getFeedBack() {
            return base.Channel.getFeedBack();
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Feedback[]> getFeedBackAsync() {
            return base.Channel.getFeedBackAsync();
        }
        
        public bool addFeedback(ElevationShop.ServiceReference1.Feedback f) {
            return base.Channel.addFeedback(f);
        }
        
        public System.Threading.Tasks.Task<bool> addFeedbackAsync(ElevationShop.ServiceReference1.Feedback f) {
            return base.Channel.addFeedbackAsync(f);
        }
        
        public void seenFeedback() {
            base.Channel.seenFeedback();
        }
        
        public System.Threading.Tasks.Task seenFeedbackAsync() {
            return base.Channel.seenFeedbackAsync();
        }
        
        public int countMaintenance() {
            return base.Channel.countMaintenance();
        }
        
        public System.Threading.Tasks.Task<int> countMaintenanceAsync() {
            return base.Channel.countMaintenanceAsync();
        }
        
        public void seenMaintenance() {
            base.Channel.seenMaintenance();
        }
        
        public System.Threading.Tasks.Task seenMaintenanceAsync() {
            return base.Channel.seenMaintenanceAsync();
        }
        
        public ElevationShop.ServiceReference1.Maintenance[] getMaintenance() {
            return base.Channel.getMaintenance();
        }
        
        public System.Threading.Tasks.Task<ElevationShop.ServiceReference1.Maintenance[]> getMaintenanceAsync() {
            return base.Channel.getMaintenanceAsync();
        }
        
        public bool addMaintenance(ElevationShop.ServiceReference1.Maintenance m) {
            return base.Channel.addMaintenance(m);
        }
        
        public System.Threading.Tasks.Task<bool> addMaintenanceAsync(ElevationShop.ServiceReference1.Maintenance m) {
            return base.Channel.addMaintenanceAsync(m);
        }
    }
}
