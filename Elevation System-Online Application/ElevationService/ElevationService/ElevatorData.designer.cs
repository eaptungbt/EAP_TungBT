#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElevationService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ElevationDB")]
	public partial class ElevatorDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertElevator(Elevator instance);
    partial void UpdateElevator(Elevator instance);
    partial void DeleteElevator(Elevator instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertMaintenance(Maintenance instance);
    partial void UpdateMaintenance(Maintenance instance);
    partial void DeleteMaintenance(Maintenance instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    #endregion
		
		public ElevatorDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ElevationDBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ElevatorDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElevatorDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElevatorDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ElevatorDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Elevator> Elevators
		{
			get
			{
				return this.GetTable<Elevator>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Maintenance> Maintenances
		{
			get
			{
				return this.GetTable<Maintenance>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emailCustomer;
		
		private string _nameCustomer;
		
		private string _passwordCustomer;
		
		private string _addressCustomer;
		
		private string _company;
		
		private EntitySet<Order> _Orders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailCustomerChanging(string value);
    partial void OnemailCustomerChanged();
    partial void OnnameCustomerChanging(string value);
    partial void OnnameCustomerChanged();
    partial void OnpasswordCustomerChanging(string value);
    partial void OnpasswordCustomerChanged();
    partial void OnaddressCustomerChanging(string value);
    partial void OnaddressCustomerChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    #endregion
		
		public Customer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailCustomer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string emailCustomer
		{
			get
			{
				return this._emailCustomer;
			}
			set
			{
				if ((this._emailCustomer != value))
				{
					this.OnemailCustomerChanging(value);
					this.SendPropertyChanging();
					this._emailCustomer = value;
					this.SendPropertyChanged("emailCustomer");
					this.OnemailCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameCustomer", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string nameCustomer
		{
			get
			{
				return this._nameCustomer;
			}
			set
			{
				if ((this._nameCustomer != value))
				{
					this.OnnameCustomerChanging(value);
					this.SendPropertyChanging();
					this._nameCustomer = value;
					this.SendPropertyChanged("nameCustomer");
					this.OnnameCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordCustomer", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string passwordCustomer
		{
			get
			{
				return this._passwordCustomer;
			}
			set
			{
				if ((this._passwordCustomer != value))
				{
					this.OnpasswordCustomerChanging(value);
					this.SendPropertyChanging();
					this._passwordCustomer = value;
					this.SendPropertyChanged("passwordCustomer");
					this.OnpasswordCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressCustomer", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string addressCustomer
		{
			get
			{
				return this._addressCustomer;
			}
			set
			{
				if ((this._addressCustomer != value))
				{
					this.OnaddressCustomerChanging(value);
					this.SendPropertyChanging();
					this._addressCustomer = value;
					this.SendPropertyChanged("addressCustomer");
					this.OnaddressCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="emailCustomer", OtherKey="emailCustomer")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Order> Orders
		{
			get
			{
				if ((this.serializing 
							&& (this._Orders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void Initialize()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Elevator")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Elevator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idElevator;
		
		private string _systemType;
		
		private string _functionElevator;
		
		private System.Nullable<int> _number;
		
		private System.Nullable<decimal> _cost;
		
		private string _descriptionElevator;
		
		private string _design;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidElevatorChanging(string value);
    partial void OnidElevatorChanged();
    partial void OnsystemTypeChanging(string value);
    partial void OnsystemTypeChanged();
    partial void OnfunctionElevatorChanging(string value);
    partial void OnfunctionElevatorChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void OndescriptionElevatorChanging(string value);
    partial void OndescriptionElevatorChanged();
    partial void OndesignChanging(string value);
    partial void OndesignChanged();
    #endregion
		
		public Elevator()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idElevator", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string idElevator
		{
			get
			{
				return this._idElevator;
			}
			set
			{
				if ((this._idElevator != value))
				{
					this.OnidElevatorChanging(value);
					this.SendPropertyChanging();
					this._idElevator = value;
					this.SendPropertyChanged("idElevator");
					this.OnidElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemType", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string systemType
		{
			get
			{
				return this._systemType;
			}
			set
			{
				if ((this._systemType != value))
				{
					this.OnsystemTypeChanging(value);
					this.SendPropertyChanging();
					this._systemType = value;
					this.SendPropertyChanged("systemType");
					this.OnsystemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_functionElevator", DbType="NVarChar(54)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string functionElevator
		{
			get
			{
				return this._functionElevator;
			}
			set
			{
				if ((this._functionElevator != value))
				{
					this.OnfunctionElevatorChanging(value);
					this.SendPropertyChanging();
					this._functionElevator = value;
					this.SendPropertyChanged("functionElevator");
					this.OnfunctionElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descriptionElevator", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string descriptionElevator
		{
			get
			{
				return this._descriptionElevator;
			}
			set
			{
				if ((this._descriptionElevator != value))
				{
					this.OndescriptionElevatorChanging(value);
					this.SendPropertyChanging();
					this._descriptionElevator = value;
					this.SendPropertyChanged("descriptionElevator");
					this.OndescriptionElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_design", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string design
		{
			get
			{
				return this._design;
			}
			set
			{
				if ((this._design != value))
				{
					this.OndesignChanging(value);
					this.SendPropertyChanging();
					this._design = value;
					this.SendPropertyChanged("design");
					this.OndesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elevator_Feedback", Storage="_Feedbacks", ThisKey="idElevator", OtherKey="idElevator")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				if ((this.serializing 
							&& (this._Feedbacks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elevator_OrderDetail", Storage="_OrderDetails", ThisKey="idElevator", OtherKey="idElevator")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._OrderDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Elevator = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Elevator = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Elevator = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Elevator = null;
		}
		
		private void Initialize()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emailEmployee;
		
		private string _nameEmployee;
		
		private string _passwordEmployee;
		
		private string _addressEmpoyee;
		
		private EntitySet<Order> _Orders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailEmployeeChanging(string value);
    partial void OnemailEmployeeChanged();
    partial void OnnameEmployeeChanging(string value);
    partial void OnnameEmployeeChanged();
    partial void OnpasswordEmployeeChanging(string value);
    partial void OnpasswordEmployeeChanged();
    partial void OnaddressEmpoyeeChanging(string value);
    partial void OnaddressEmpoyeeChanged();
    #endregion
		
		public Employee()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailEmployee", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string emailEmployee
		{
			get
			{
				return this._emailEmployee;
			}
			set
			{
				if ((this._emailEmployee != value))
				{
					this.OnemailEmployeeChanging(value);
					this.SendPropertyChanging();
					this._emailEmployee = value;
					this.SendPropertyChanged("emailEmployee");
					this.OnemailEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameEmployee", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string nameEmployee
		{
			get
			{
				return this._nameEmployee;
			}
			set
			{
				if ((this._nameEmployee != value))
				{
					this.OnnameEmployeeChanging(value);
					this.SendPropertyChanging();
					this._nameEmployee = value;
					this.SendPropertyChanged("nameEmployee");
					this.OnnameEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordEmployee", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string passwordEmployee
		{
			get
			{
				return this._passwordEmployee;
			}
			set
			{
				if ((this._passwordEmployee != value))
				{
					this.OnpasswordEmployeeChanging(value);
					this.SendPropertyChanging();
					this._passwordEmployee = value;
					this.SendPropertyChanged("passwordEmployee");
					this.OnpasswordEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressEmpoyee", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string addressEmpoyee
		{
			get
			{
				return this._addressEmpoyee;
			}
			set
			{
				if ((this._addressEmpoyee != value))
				{
					this.OnaddressEmpoyeeChanging(value);
					this.SendPropertyChanging();
					this._addressEmpoyee = value;
					this.SendPropertyChanged("addressEmpoyee");
					this.OnaddressEmpoyeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Order", Storage="_Orders", ThisKey="emailEmployee", OtherKey="emailEmployee")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Order> Orders
		{
			get
			{
				if ((this.serializing 
							&& (this._Orders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void Initialize()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFb;
		
		private string _idElevator;
		
		private string _Satisfy;
		
		private string _problem;
		
		private string _improvement;
		
		private System.Nullable<int> _statusFeedback;
		
		private EntityRef<Elevator> _Elevator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFbChanging(int value);
    partial void OnidFbChanged();
    partial void OnidElevatorChanging(string value);
    partial void OnidElevatorChanged();
    partial void OnSatisfyChanging(string value);
    partial void OnSatisfyChanged();
    partial void OnproblemChanging(string value);
    partial void OnproblemChanged();
    partial void OnimprovementChanging(string value);
    partial void OnimprovementChanged();
    partial void OnstatusFeedbackChanging(System.Nullable<int> value);
    partial void OnstatusFeedbackChanged();
    #endregion
		
		public Feedback()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFb", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int idFb
		{
			get
			{
				return this._idFb;
			}
			set
			{
				if ((this._idFb != value))
				{
					this.OnidFbChanging(value);
					this.SendPropertyChanging();
					this._idFb = value;
					this.SendPropertyChanged("idFb");
					this.OnidFbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idElevator", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string idElevator
		{
			get
			{
				return this._idElevator;
			}
			set
			{
				if ((this._idElevator != value))
				{
					if (this._Elevator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidElevatorChanging(value);
					this.SendPropertyChanging();
					this._idElevator = value;
					this.SendPropertyChanged("idElevator");
					this.OnidElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Satisfy", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Satisfy
		{
			get
			{
				return this._Satisfy;
			}
			set
			{
				if ((this._Satisfy != value))
				{
					this.OnSatisfyChanging(value);
					this.SendPropertyChanging();
					this._Satisfy = value;
					this.SendPropertyChanged("Satisfy");
					this.OnSatisfyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_problem", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string problem
		{
			get
			{
				return this._problem;
			}
			set
			{
				if ((this._problem != value))
				{
					this.OnproblemChanging(value);
					this.SendPropertyChanging();
					this._problem = value;
					this.SendPropertyChanged("problem");
					this.OnproblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_improvement", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string improvement
		{
			get
			{
				return this._improvement;
			}
			set
			{
				if ((this._improvement != value))
				{
					this.OnimprovementChanging(value);
					this.SendPropertyChanging();
					this._improvement = value;
					this.SendPropertyChanged("improvement");
					this.OnimprovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusFeedback", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> statusFeedback
		{
			get
			{
				return this._statusFeedback;
			}
			set
			{
				if ((this._statusFeedback != value))
				{
					this.OnstatusFeedbackChanging(value);
					this.SendPropertyChanging();
					this._statusFeedback = value;
					this.SendPropertyChanged("statusFeedback");
					this.OnstatusFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elevator_Feedback", Storage="_Elevator", ThisKey="idElevator", OtherKey="idElevator", IsForeignKey=true)]
		public Elevator Elevator
		{
			get
			{
				return this._Elevator.Entity;
			}
			set
			{
				Elevator previousValue = this._Elevator.Entity;
				if (((previousValue != value) 
							|| (this._Elevator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Elevator.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Elevator.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._idElevator = value.idElevator;
					}
					else
					{
						this._idElevator = default(string);
					}
					this.SendPropertyChanged("Elevator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Elevator = default(EntityRef<Elevator>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maintenance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Maintenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMt;
		
		private string _idOder;
		
		private string _problem;
		
		private System.Nullable<int> _statusMaintenace;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMtChanging(int value);
    partial void OnidMtChanged();
    partial void OnidOderChanging(string value);
    partial void OnidOderChanged();
    partial void OnproblemChanging(string value);
    partial void OnproblemChanged();
    partial void OnstatusMaintenaceChanging(System.Nullable<int> value);
    partial void OnstatusMaintenaceChanged();
    #endregion
		
		public Maintenance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int idMt
		{
			get
			{
				return this._idMt;
			}
			set
			{
				if ((this._idMt != value))
				{
					this.OnidMtChanging(value);
					this.SendPropertyChanging();
					this._idMt = value;
					this.SendPropertyChanged("idMt");
					this.OnidMtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOder", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string idOder
		{
			get
			{
				return this._idOder;
			}
			set
			{
				if ((this._idOder != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOderChanging(value);
					this.SendPropertyChanging();
					this._idOder = value;
					this.SendPropertyChanged("idOder");
					this.OnidOderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_problem", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string problem
		{
			get
			{
				return this._problem;
			}
			set
			{
				if ((this._problem != value))
				{
					this.OnproblemChanging(value);
					this.SendPropertyChanging();
					this._problem = value;
					this.SendPropertyChanged("problem");
					this.OnproblemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusMaintenace", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> statusMaintenace
		{
			get
			{
				return this._statusMaintenace;
			}
			set
			{
				if ((this._statusMaintenace != value))
				{
					this.OnstatusMaintenaceChanging(value);
					this.SendPropertyChanging();
					this._statusMaintenace = value;
					this.SendPropertyChanged("statusMaintenace");
					this.OnstatusMaintenaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Maintenance", Storage="_Order", ThisKey="idOder", OtherKey="idOder", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Maintenances.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Maintenances.Add(this);
						this._idOder = value.idOder;
					}
					else
					{
						this._idOder = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idOder;
		
		private string _emailCustomer;
		
		private string _emailEmployee;
		
		private System.Nullable<int> _OrderStatus;
		
		private System.Nullable<System.DateTime> _time;
		
		private EntitySet<Maintenance> _Maintenances;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidOderChanging(string value);
    partial void OnidOderChanged();
    partial void OnemailCustomerChanging(string value);
    partial void OnemailCustomerChanged();
    partial void OnemailEmployeeChanging(string value);
    partial void OnemailEmployeeChanged();
    partial void OnOrderStatusChanging(System.Nullable<int> value);
    partial void OnOrderStatusChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    #endregion
		
		public Order()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOder", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string idOder
		{
			get
			{
				return this._idOder;
			}
			set
			{
				if ((this._idOder != value))
				{
					this.OnidOderChanging(value);
					this.SendPropertyChanging();
					this._idOder = value;
					this.SendPropertyChanged("idOder");
					this.OnidOderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailCustomer", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string emailCustomer
		{
			get
			{
				return this._emailCustomer;
			}
			set
			{
				if ((this._emailCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailCustomerChanging(value);
					this.SendPropertyChanging();
					this._emailCustomer = value;
					this.SendPropertyChanged("emailCustomer");
					this.OnemailCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailEmployee", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string emailEmployee
		{
			get
			{
				return this._emailEmployee;
			}
			set
			{
				if ((this._emailEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailEmployeeChanging(value);
					this.SendPropertyChanging();
					this._emailEmployee = value;
					this.SendPropertyChanged("emailEmployee");
					this.OnemailEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Maintenance", Storage="_Maintenances", ThisKey="idOder", OtherKey="idOder")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Maintenance> Maintenances
		{
			get
			{
				if ((this.serializing 
							&& (this._Maintenances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Maintenances;
			}
			set
			{
				this._Maintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="idOder", OtherKey="idOder")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._OrderDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="emailCustomer", OtherKey="emailCustomer", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._emailCustomer = value.emailCustomer;
					}
					else
					{
						this._emailCustomer = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Order", Storage="_Employee", ThisKey="emailEmployee", OtherKey="emailEmployee", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._emailEmployee = value.emailEmployee;
					}
					else
					{
						this._emailEmployee = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void Initialize()
		{
			this._Maintenances = new EntitySet<Maintenance>(new Action<Maintenance>(this.attach_Maintenances), new Action<Maintenance>(this.detach_Maintenances));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idOD;
		
		private string _idOder;
		
		private string _idElevator;
		
		private System.Nullable<int> _qty;
		
		private System.Nullable<decimal> _price;
		
		private EntityRef<Elevator> _Elevator;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidODChanging(int value);
    partial void OnidODChanged();
    partial void OnidOderChanging(string value);
    partial void OnidOderChanged();
    partial void OnidElevatorChanging(string value);
    partial void OnidElevatorChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public OrderDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int idOD
		{
			get
			{
				return this._idOD;
			}
			set
			{
				if ((this._idOD != value))
				{
					this.OnidODChanging(value);
					this.SendPropertyChanging();
					this._idOD = value;
					this.SendPropertyChanged("idOD");
					this.OnidODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOder", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string idOder
		{
			get
			{
				return this._idOder;
			}
			set
			{
				if ((this._idOder != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidOderChanging(value);
					this.SendPropertyChanging();
					this._idOder = value;
					this.SendPropertyChanged("idOder");
					this.OnidOderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idElevator", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string idElevator
		{
			get
			{
				return this._idElevator;
			}
			set
			{
				if ((this._idElevator != value))
				{
					if (this._Elevator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidElevatorChanging(value);
					this.SendPropertyChanging();
					this._idElevator = value;
					this.SendPropertyChanged("idElevator");
					this.OnidElevatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Elevator_OrderDetail", Storage="_Elevator", ThisKey="idElevator", OtherKey="idElevator", IsForeignKey=true)]
		public Elevator Elevator
		{
			get
			{
				return this._Elevator.Entity;
			}
			set
			{
				Elevator previousValue = this._Elevator.Entity;
				if (((previousValue != value) 
							|| (this._Elevator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Elevator.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Elevator.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._idElevator = value.idElevator;
					}
					else
					{
						this._idElevator = default(string);
					}
					this.SendPropertyChanged("Elevator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="idOder", OtherKey="idOder", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._idOder = value.idOder;
					}
					else
					{
						this._idOder = default(string);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Elevator = default(EntityRef<Elevator>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
